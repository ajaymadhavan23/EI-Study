<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/Design Patterns/Behavioral/Usecase1/src/Apps.java;C:/Studies/EI studies/Design Patterns/Behavioral/Usecase1/src/Observer.java;C:/Studies/EI studies/Design Patterns/Behavioral/Usecase1/src/Stock.java;C:/Studies/EI studies/Design Patterns/Behavioral/Usecase1/src/StockPriceAlert.java;C:/Studies/EI studies/Design Patterns/Behavioral/Usecase1/src/Subject.java;C:/Studies/EI studies/Design Patterns/Behavioral/Usecase1/README.md;C:/Studies/EI studies/Design Patterns/Behavioral/Usecase2/src/DoToTask.java;C:/Studies/EI studies/Design Patterns/Behavioral/Usecase2/src/GroceryTask.java;C:/Studies/EI studies/Design Patterns/Behavioral/Usecase2/src/Studytask.java;C:/Studies/EI studies/Design Patterns/Behavioral/Usecase2/src/Task.java;C:/Studies/EI studies/Design Patterns/Behavioral/Usecase2/src/TaskManager.java;C:/Studies/EI studies/Design Patterns/Behavioral/Usecase2/src/Workout.java;C:/Studies/EI studies/Design Patterns/Behavioral/Usecase2/README.md;C:/Studies/EI studies/Design Patterns/Creational/Usecase1/src/PrinterSpooler.java;C:/Studies/EI studies/Design Patterns/Creational/Usecase1/src/PrinterSpoolerSystem.java;C:/Studies/EI studies/Design Patterns/Creational/Usecase1/README.md;C:/Studies/EI studies/Design Patterns/Creational/Usecase2/src/Auto.java;C:/Studies/EI studies/Design Patterns/Creational/Usecase2/src/Bike.java;C:/Studies/EI studies/Design Patterns/Creational/Usecase2/src/Car.java;C:/Studies/EI studies/Design Patterns/Creational/Usecase2/src/Transport.java;C:/Studies/EI studies/Design Patterns/Creational/Usecase2/src/TransportFactory.java;C:/Studies/EI studies/Design Patterns/Creational/Usecase2/src/VehicleBookingApp.java;C:/Studies/EI studies/Design Patterns/Creational/Usecase2/README.md;C:/Studies/EI studies/Design Patterns/Structural/Usecase1/src/Devices/Device.java;C:/Studies/EI studies/Design Patterns/Structural/Usecase1/src/Devices/Radio.java;C:/Studies/EI studies/Design Patterns/Structural/Usecase1/src/Devices/Tv.java;C:/Studies/EI studies/Design Patterns/Structural/Usecase1/src/Remotes/AdvanceRemote.java;C:/Studies/EI studies/Design Patterns/Structural/Usecase1/src/Remotes/Remote.java;C:/Studies/EI studies/Design Patterns/Structural/Usecase1/src/Remotes/SimpleRemote.java;C:/Studies/EI studies/Design Patterns/Structural/Usecase1/src/Main.java;C:/Studies/EI studies/Design Patterns/Structural/Usecase1/README.md;C:/Studies/EI studies/Design Patterns/Structural/Usecase2/src/Chocolate.java;C:/Studies/EI studies/Design Patterns/Structural/Usecase2/src/Coffee.java;C:/Studies/EI studies/Design Patterns/Structural/Usecase2/src/CoffeeDecorator.java;C:/Studies/EI studies/Design Patterns/Structural/Usecase2/src/CoffeeShop.java;C:/Studies/EI studies/Design Patterns/Structural/Usecase2/src/SimpleCoffee.java;C:/Studies/EI studies/Design Patterns/Structural/Usecase2/src/Sugar.java;C:/Studies/EI studies/Design Patterns/Structural/Usecase2/README.md;C:/Studies/EI studies/Design Patterns/Readme.md;C:/Studies/EI studies/out/production/EI studies/Readme.md;C:/Studies/EI studies/SatelliteApp/out/production/Task6/Readme.md;C:/Studies/EI studies/SatelliteApp/src/main/app/SatelliteApp.java;C:/Studies/EI studies/SatelliteApp/src/main/builder/Builder.java;C:/Studies/EI studies/SatelliteApp/src/main/commands/CameraCapture.java;C:/Studies/EI studies/SatelliteApp/src/main/commands/CameraOperation.java;C:/Studies/EI studies/SatelliteApp/src/main/commands/CreateSatellite.java;C:/Studies/EI studies/SatelliteApp/src/main/commands/DataCollector.java;C:/Studies/EI studies/SatelliteApp/src/main/commands/DefaultSatellite.java;C:/Studies/EI studies/SatelliteApp/src/main/commands/GetList.java;C:/Studies/EI studies/SatelliteApp/src/main/commands/GetState.java;C:/Studies/EI studies/SatelliteApp/src/main/commands/SatelliteCommand.java;C:/Studies/EI studies/SatelliteApp/src/main/commands/SatelliteRotate.java;C:/Studies/EI studies/SatelliteApp/src/main/commands/SolarPanelManager.java;C:/Studies/EI studies/SatelliteApp/src/main/commands/ThermalSensorAdapter.java;C:/Studies/EI studies/SatelliteApp/src/main/core/Dashboard.java;C:/Studies/EI studies/SatelliteApp/src/main/core/Direction.java;C:/Studies/EI studies/SatelliteApp/src/main/core/LoggerUtil.java;C:/Studies/EI studies/SatelliteApp/src/main/core/Observer.java;C:/Studies/EI studies/SatelliteApp/src/main/core/Satellite.java;C:/Studies/EI studies/SatelliteApp/src/main/core/SatelliteManager.java;C:/Studies/EI studies/SatelliteApp/src/main/core/SatelliteOperationException.java;C:/Studies/EI studies/SatelliteApp/src/main/core/Subject.java;C:/Studies/EI studies/SatelliteApp/src/main/decorator/AddCameraDecorator.java;C:/Studies/EI studies/SatelliteApp/src/main/decorator/AddSensorDecorator.java;C:/Studies/EI studies/SatelliteApp/src/main/decorator/SatelliteDecorator.java;C:/Studies/EI studies/SatelliteApp/src/main/factories/SatelliteCommandFactory.java;C:/Studies/EI studies/SatelliteApp/src/main/sensors/ThermalSensor.java;C:/Studies/EI studies/SatelliteApp/src/Readme.md;C:/Studies/EI studies/README.md" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;C:/Studies/EI studies&quot;:&quot;{\&quot;/Design Patterns/Behavioral/Usecase1/src/Stock.java\&quot;:\&quot;This file defines a `Stock` class that implements the `Subject` interface, which allows observers to subscribe and unsubscribe to the stock\\u0027s price changes, and notifies the observers when the price is updated.\\n\\n`Stock`: A concrete implementation of the `Subject` interface, representing a stock with a name and a price.\\n\\n`subscribe(Observer o)`: Adds an observer to the list of observers for this stock.\\n\\n`unsubscribe(Observer o)`: Removes an observer from the list of observers for this stock.\\n\\n`notifyObservers()`: Notifies all the observers of the stock\\u0027s price change.\\n\\n`setPrice(double price)`: Sets the price of the stock and notifies all the observers of the change.\&quot;,\&quot;/Design Patterns/Behavioral/Usecase2/src/DoToTask.java\&quot;:\&quot;This file contains the following classes and functions:\\n\\n`DoToTask`: The main class that creates a `TaskManager` object, adds various tasks to it, and then displays and finishes tasks.\\n\\n`TaskManager`: A class that manages a collection of tasks, allowing users to add, display, and finish tasks.\\n\\n`GroceryTask`: A class that represents a grocery task.\\n\\n`Studytask`: A class that represents a study task.\\n\\n`Workout`: A class that represents a workout task.\\n\\n`main`: The entry point of the program, which creates a `TaskManager` object, adds various tasks to it, and then displays and finishes tasks.\&quot;,\&quot;/Design Patterns/Structural/Usecase2/src/Chocolate.java\&quot;:\&quot;This file contains a concrete Decorator class called `Chocolate` that extends the `CoffeeDecorator` class.\\n\\n`Chocolate`: A concrete Decorator class that adds chocolate to a Coffee object.\\n\\n`Chocolate(Coffee coffee)`: The constructor that takes a Coffee object and initializes the `coffee` field.\\n\\n`name()`: Overrides the `name()` method of the `CoffeeDecorator` class to return the name of the Coffee object with the addition of \\\&quot;with chocolate\\\&quot;.\\n\\n`cost()`: Overrides the `cost()` method of the `CoffeeDecorator` class to return the cost of the Coffee object plus an additional 10 units.\&quot;,\&quot;/SatelliteApp/src/main/core/Direction.java\&quot;:\&quot;This file does not contain any classes or functions. Instead, it defines an `enum` called `Direction` that represents the eight cardinal and intercardinal directions (North, South, East, West, Northeast, Southwest, Southeast, and Northwest) along with a corresponding string description for each direction.\&quot;,\&quot;/Design Patterns/Structural/Usecase1/src/Remotes/Remote.java\&quot;:\&quot;`Remote`: An abstract class that represents a remote control for a device.\\n\\n`togglepower()`: An abstract method that toggles the power of the device.\\n\\n`volumeUp()`: An abstract method that increases the volume of the device.\\n\\n`volumeDown()`: An abstract method that decreases the volume of the device.\\n\\nThis file defines an abstract `Remote` class that serves as a base class for different types of remote controls. The `Remote` class has a `Device` object that it controls, and it defines abstract methods for toggling the power, increasing the volume, and decreasing the volume of the device.\&quot;,\&quot;/Design Patterns/Behavioral/Usecase2/src/Task.java\&quot;:\&quot;This file defines an interface named `Task` that provides a contract for executing tasks. The file does not contain any classes or functions, but rather defines the structure of the `Task` interface.\\n\\n`Task`: An interface that defines a contract for executing tasks.\\n\\n`execute()`: A method that must be implemented by any class that implements the `Task` interface, and is responsible for executing the task.\&quot;,\&quot;/Design Patterns/Structural/Usecase2/src/CoffeeDecorator.java\&quot;:\&quot;This file contains a single abstract class:\\n\\n`CoffeeDecorator`: An abstract class that implements the `Coffee` interface and serves as a base class for concrete decorator classes.\\n\\nThe file also contains the following functions:\\n\\n`CoffeeDecorator(Coffee coffee)`: A constructor that takes a `Coffee` object and stores it as a protected member variable.\\n\\n`name()`: A method that returns the name of the `Coffee` object stored in the `CoffeeDecorator` instance.\\n\\n`cost()`: A method that returns the cost of the `Coffee` object stored in the `CoffeeDecorator` instance.\\n\\nThis file provides a base implementation for the Decorator design pattern, which allows for the dynamic addition of responsibilities to individual objects without affecting the behavior of other objects from the same class.\&quot;,\&quot;/Design Patterns/Creational/Usecase2/src/TransportFactory.java\&quot;:\&quot;`TransportFactory`: A factory class that creates and returns Transport objects based on the specified type.\\n\\n`getTransport`: A factory method that creates and returns a Transport object based on the specified type (car, bike, or auto).\&quot;,\&quot;/Design Patterns/Structural/Usecase1/src/Main.java\&quot;:\&quot;This file is a Java program that demonstrates the usage of different types of remote controls (Simple Remote and Advance Remote) to control various devices (TV and Radio).\\n\\n`Main`: The main class that contains the `main()` method, which is the entry point of the program.\\n\\n`main()`: The main method that creates instances of `SimpleRemote` and `AdvanceRemote` to control `Tv` and `Radio` devices, and then calls the corresponding methods to demonstrate their functionality.\\n\\n`SimpleRemote`: A class that represents a simple remote control with basic functionality (power toggle, volume up, volume down).\\n\\n`AdvanceRemote`: A class that represents an advanced remote control with additional functionality (power toggle, volume up, volume down, mute).\\n\\n`Tv`: A class that represents a television device.\\n\\n`Radio`: A class that represents a radio device.\&quot;,\&quot;/SatelliteApp/src/Readme.md\&quot;:\&quot;There are no classes or functions in the provided document. The document appears to be an empty XML document with a `\\u003cdocument\\u003e` and `\\u003c/document\\u003e` tag, but no content within it.\&quot;,\&quot;/Design Patterns/Behavioral/Usecase1/src/Subject.java\&quot;:\&quot;This file defines an interface called `Subject` that represents the subject of an Observer pattern. The `Subject` interface provides methods for subscribing and unsubscribing observers, as well as a method to notify all observers of changes.\\n\\n`Subject`: An interface that represents the subject of an Observer pattern, providing methods for managing observers and notifying them of changes.\\n\\n`subscribe(Observer o)`: Adds an observer to the list of observers for the subject.\\n\\n`unsubscribe(Observer o)`: Removes an observer from the list of observers for the subject.\\n\\n`notifyObservers()`: Notifies all observers of the subject that a change has occurred.\&quot;,\&quot;/out/production/EI studies/Readme.md\&quot;:\&quot;This file does not contain any classes or functions. It appears to be a simple document with a heading \\\&quot;Hello i am K L K Ajay Madhavan (226110)\\\&quot; and a subheading \\\&quot;K L N College Of Engineering\\\&quot;. The file seems to be providing some basic information about the author or a student named K L K Ajay Madhavan who is associated with the K L N College Of Engineering.\&quot;,\&quot;/SatelliteApp/src/main/commands/ThermalSensorAdapter.java\&quot;:\&quot;This file contains a single class and one function:\\n\\n`ThermalSensorAdapter`: This class is an implementation of the `SatelliteCommand` interface, which provides a way to interact with the thermal sensor on a satellite.\\n\\n`execute()`: This function retrieves the thermal sensor from the satellite, checks if it exists, and then prints the current temperature reading from the sensor.\\n\\nThe file appears to be part of a larger system that manages the operations of a satellite, with a focus on interacting with the thermal sensor.\&quot;,\&quot;/SatelliteApp/src/main/decorator/AddCameraDecorator.java\&quot;:\&quot;This file contains the implementation of the `AddCameraDecorator` class, which is a decorator for the `Satellite` class.\\n\\n`AddCameraDecorator`: A decorator class that adds a camera to a `Satellite` object.\\n\\n`execute()`: A method that adds a camera to the target `Satellite` object if it doesn\\u0027t already have one, and updates the `SatelliteManager` with the modified `Satellite` object.\&quot;,\&quot;/Design Patterns/Behavioral/Usecase1/README.md\&quot;:\&quot;This file describes an implementation of the Observer design pattern for a Stock Price Alert System. It does not contain any specific classes or functions, but rather provides an overview of the system and its features. The key elements are:\\n\\n`Subject`: Declares methods for registering, removing, and notifying observers.\\n`Observer`: Declares the update method for receiving stock updates.\\n`Stock`: Maintains a list of observers and updates them when the stock price changes.\\n`StockDisplay`: Implements the update method to display stock changes on Messenger or Email.\\nThe file demonstrates how the Observer pattern can be used to create a decoupled system where the stock (subject) does not need to know the internal logic of the observers (Messenger, Email), and how observers can be dynamically added or removed from the system.\&quot;,\&quot;/Design Patterns/Creational/Usecase2/src/VehicleBookingApp.java\&quot;:\&quot;This file contains the main class `VehicleBookingApp` and a factory class `TransportFactory`. The `VehicleBookingApp` class is responsible for taking user input and creating the appropriate transport object, while the `TransportFactory` class is responsible for creating the transport object based on the user\\u0027s choice.\\n\\n`VehicleBookingApp`: This is the main class where the user interacts with the application to book a vehicle.\\n\\n`main(String[] args)`: This is the entry point of the application where the user is prompted to choose a ride (Car, Bike, or Auto) and enter the distance. The appropriate transport object is then created and the `ride()` method is called.\\n\\n`TransportFactory`: This is a factory class that is responsible for creating the appropriate transport object based on the user\\u0027s choice.\\n\\n`getTransport(String choice)`: This method takes the user\\u0027s choice as input and returns the appropriate transport object.\&quot;,\&quot;/Design Patterns/Creational/Usecase2/README.md\&quot;:\&quot;This file demonstrates the Factory Design Pattern using a Vehicle Booking App. It does not contain any classes or functions, but rather provides an overview of the project, its features, and an example flow of how the application works.\\n\\nThe file summarizes the following:\\n\\n1. **Overview**: This project demonstrates the Factory Design Pattern using a Vehicle Booking App, where a user can book different types of vehicles without worrying about how the objects are created.\\n\\n2. **Features**: The project includes features such as centralized object creation through `TransportFactory`, encapsulation of the logic for creating transport objects, easy extensibility for adding new types of transport, and an extra feature for calculating the fair.\\n\\n3. **Implementation**: The implementation involves defining a common `Transport` interface, creating concrete classes like `Car`, `Bike`, and `Auto` that implement the `Transport` interface, and implementing a `TransportFactory` class that returns the appropriate `Transport` object based on the user\\u0027s choice.\\n\\n4. **Example Flow**: The example flow describes how the user interacts with the app, selects a vehicle type, and the `TransportFactory` creates the corresponding `Transport` object, which is then used to call the `ride()` method.\\n\\n5. **Output**: The file provides an example output of the application, where the user selects a \\\&quot;Car\\\&quot; and the app books the car, displaying the distance and the fair.\&quot;,\&quot;/SatelliteApp/src/main/commands/GetState.java\&quot;:\&quot;This file contains a single class `GetState` that implements the `SatelliteCommand` interface.\\n\\n`GetState`: This class represents a command to get the current state of a satellite, including its orientation, facing direction, solar panel status, data collected, camera status, and availability of a thermal sensor.\\n\\n`execute()`: This function prints out the current state of the satellite, including its orientation, facing direction, solar panel status, data collected, camera status, and availability of a thermal sensor.\&quot;,\&quot;/SatelliteApp/src/main/decorator/SatelliteDecorator.java\&quot;:\&quot;This file contains the implementation of the `SatelliteDecorator` class, which is an abstract class that implements the `SatelliteCommand` interface. The purpose of this class is to provide a base implementation for decorating `SatelliteCommand` objects with additional functionality.\\n\\n`SatelliteDecorator`: An abstract class that provides a base implementation for decorating `SatelliteCommand` objects with additional functionality.\\n\\n`execute()`: Executes the decorated `SatelliteCommand` object, if it exists.\&quot;,\&quot;/Design Patterns/Behavioral/Usecase2/src/TaskManager.java\&quot;:\&quot;This file contains the `TaskManager` class and several functions within it.\\n\\n`TaskManager`: A class that manages a list of tasks and provides methods to add, run, finish, and display the tasks.\\n\\n`addTask(Task task)`: Adds a new task to the list of tasks.\\n\\n`runTasks()`: Executes all the tasks in the list in a First-In-First-Out (FIFO) order and then clears the list.\\n\\n`finishTask(int index)`: Removes and executes a specific task from the list based on the provided index.\\n\\n`showTasks()`: Displays the list of current tasks and their corresponding indices.\&quot;,\&quot;/Design Patterns/Creational/Usecase1/src/PrinterSpooler.java\&quot;:\&quot;`PrinterSpooler`: This is a Singleton class that manages a queue of print jobs and provides methods to add, process, and display the queue.\\n\\n`getInstance()`: This is a thread-safe method that returns the single instance of the `PrinterSpooler` class.\\n\\n`addJob(String jobName)`: This method adds a new print job to the queue.\\n\\n`processNextJob()`: This method processes the next job in the queue by removing it from the queue and printing it.\\n\\n`showQueue()`: This method displays the current state of the print job queue.\&quot;,\&quot;/Design Patterns/Behavioral/Usecase2/src/GroceryTask.java\&quot;:\&quot;`GroceryTask`: A concrete implementation of the `Task` interface that represents a grocery shopping task.\\n\\n`execute()`: Prints a message to the console indicating that the specified grocery item needs to be purchased.\&quot;,\&quot;/Design Patterns/Structural/Usecase2/src/Sugar.java\&quot;:\&quot;`Sugar`: A concrete decorator class that adds sugar to a coffee.\\n\\n`name()`: Returns the name of the coffee with the addition of \\\&quot;with sugar\\\&quot;.\\n\\n`cost()`: Returns the cost of the coffee with an additional 5 units added to the base cost.\\n\\nThis file defines a concrete decorator class called `Sugar` that extends the `CoffeeDecorator` class. The `Sugar` class is responsible for adding sugar to a coffee object and modifying its name and cost accordingly.\&quot;,\&quot;/Design Patterns/Creational/Usecase2/src/Car.java\&quot;:\&quot;This file defines a `Car` class that implements the `Transport` interface.\\n\\n`Car`: A class that represents a car as a mode of transport.\\n\\n`ride(int distance)`: A method that calculates the fare for a car ride based on the distance traveled and prints a message with the details.\&quot;,\&quot;/Design Patterns/Structural/Usecase1/src/Devices/Device.java\&quot;:\&quot;This file defines an interface named `Device` that provides a contract for devices with the following methods:\\n\\n`Device`: An interface that defines the common operations for devices, such as powering on, powering off, setting the volume, and checking the power state.\\n\\n`poweron()`: Turns on the device.\\n`poweroff()`: Turns off the device.\\n`setVolume(int volume)`: Sets the volume of the device.\\n`ispoweron()`: Checks if the device is currently powered on.\&quot;,\&quot;/Design Patterns/Behavioral/Usecase2/README.md\&quot;:\&quot;This file describes a simple To-Do Task Manager application that demonstrates the Command Design Pattern. It does not contain any classes or functions, but rather provides an overview of the application\\u0027s features and implementation.\\n\\nThe file describes the following:\\n\\n1. Overview: This section provides a high-level description of the project, including the use of the Command Design Pattern and the key features of the To-Do Task Manager.\\n\\n2. Features: This section lists the main features of the To-Do Task Manager, such as adding tasks dynamically, executing tasks in order, finishing specific tasks out of order, and displaying the current pending tasks.\\n\\n3. Implementation: This section explains the key components of the implementation, including the `Task` interface, the concrete task classes (e.g., `GroceryTask`, `WorkoutTask`, `StudyTask`), the `TaskManager` (Invoker), and the client (Main).\\n\\n4. Sample Flow/Output: This section provides a sample usage scenario, demonstrating how to create a `TaskManager` object, add tasks, finish a specific task, and display the current to-do list.\\n\\nOverall, this file serves as a high-level overview of the To-Do Task Manager application and its implementation using the Command Design Pattern.\&quot;,\&quot;/SatelliteApp/src/main/core/Satellite.java\&quot;:\&quot;This file defines a `Satellite` class and several functions associated with it.\\n\\n`Satellite`: Represents a satellite with various properties such as name, orientation, solar panels, data collected, facing direction, camera, and a thermal sensor.\\n\\n`Satellite(String, Direction, boolean, int, String, Boolean)`: Constructs a new `Satellite` object with the given parameters.\\n\\n`getOrientation()`: Returns the current orientation of the satellite.\\n\\n`setOrientation(Direction)`: Sets the orientation of the satellite and updates the facing direction.\\n\\n`isSolarpanals()`: Returns whether the satellite has solar panels.\\n\\n`setSolarpanals(boolean)`: Sets the solar panel status of the satellite.\\n\\n`getDatacollected()`: Returns the amount of data collected by the satellite.\\n\\n`setDatacollected(int)`: Increments the amount of data collected by the satellite.\\n\\n`getName()`: Returns the name of the satellite.\\n\\n`getFacing()`: Returns the facing direction of the satellite.\\n\\n`getCamera()`: Returns whether the satellite has a camera.\\n\\n`setCamera(Boolean)`: Sets the camera status of the satellite.\\n\\n`isCamera()`: Returns whether the satellite has a camera and it is enabled.\\n\\n`getThermalSensor()`: Returns the thermal sensor associated with the satellite.\\n\\n`setThermalSensor(ThermalSensor)`: Sets the thermal sensor for the satellite.\&quot;,\&quot;/SatelliteApp/src/main/core/Subject.java\&quot;:\&quot;This file defines an interface named `Subject` that provides methods for attaching and detaching observers, as well as notifying them of changes.\\n\\n`Subject`: An interface that defines the methods for managing observers.\\n\\n`attach(Observer o)`: Adds an observer to the list of observers.\\n`detach(Observer o)`: Removes an observer from the list of observers.\\n`notifyObservers()`: Notifies all registered observers of a change in the subject.\&quot;,\&quot;/SatelliteApp/src/main/sensors/ThermalSensor.java\&quot;:\&quot;This file contains a single class, `ThermalSensor`, which provides a simple implementation of a thermal sensor that generates random temperature values between -50°C and 100°C.\\n\\n`ThermalSensor`: A class that simulates a thermal sensor by generating random temperature values.\\n\\n`getValue()`: A function that returns a random temperature value between -50°C and 100°C.\&quot;,\&quot;/Design Patterns/Behavioral/Usecase2/src/Workout.java\&quot;:\&quot;`Workout`: A class that represents a workout task.\\n\\n`execute()`: A method that prints a message indicating the workout being performed.\\n\\nThis file defines a `Workout` class that implements the `Task` interface. The `Workout` class has a private `work` field that stores the type of workout, and an `execute()` method that prints a message indicating the workout being performed.\&quot;,\&quot;/Design Patterns/Creational/Usecase2/src/Transport.java\&quot;:\&quot;This file defines a `Transport` interface, which provides a way to represent different modes of transportation. The interface has a single method, `ride`, which takes a distance parameter and represents the act of traveling that distance using the given mode of transport.\\n\\n`Transport`: Defines a common interface for different modes of transportation, allowing them to be used interchangeably.\\n\\n`ride`: Represents the act of traveling a given distance using the specified mode of transport.\&quot;,\&quot;/Design Patterns/Structural/Usecase2/README.md\&quot;:\&quot;This file describes a Coffee Shop Customizer system that demonstrates the Decorator Design Pattern. It does not contain any specific classes or functions, but rather provides an overview of the system and its implementation.\\n\\nThe file describes the following:\\n\\n1. The project demonstrates the Decorator Design Pattern using a Coffee Shop Customizer.\\n2. The base coffee (`SimpleCoffee`) can be dynamically decorated with additional features like `Milk`, `Sugar`, `Chocolate`, etc.\\n3. The pattern allows adding new behavior (add-ons) without modifying the base class.\\n4. The system is flexible and extendable, as new add-ons can be added easily as decorators, without creating a huge combination of classes.\\n5. The implementation includes an interface `Coffee` for all coffee types, a concrete base coffee `SimpleCoffee`, an abstract decorator class `CoffeeDecorator`, and concrete decorators like `Milk`, `Sugar`, and `Chocolate`.\\n6. The example flow demonstrates chaining decorators to customize coffee dynamically, and the sample output shows the description and cost of the customized coffee.\&quot;,\&quot;/Design Patterns/Creational/Usecase2/src/Auto.java\&quot;:\&quot;`Auto`: A class that implements the `Transport` interface and provides the functionality for booking an auto ride.\\n\\n`ride(int distance)`: A method that calculates the fare for an auto ride based on the distance and prints the details of the booked ride.\\n\\nThis file defines an `Auto` class that implements the `Transport` interface. The `Auto` class provides the implementation for the `ride()` method, which calculates the fare for an auto ride based on the distance and prints the details of the booked ride.\&quot;,\&quot;/SatelliteApp/src/main/factories/SatelliteCommandFactory.java\&quot;:\&quot;This file appears to be a Java class called `SatelliteCommandFactory` that is responsible for creating and managing various satellite-related commands.\\n\\n`SatelliteCommandFactory`: A factory class that creates and returns different satellite-related commands based on the input command string.\\n\\n`getCommand(String command)`: A method that takes a command string and returns the corresponding satellite command object, or throws a `SatelliteOperationException` if the command is unknown.\\n\\nThe file also imports various other classes and interfaces related to satellite operations, such as `Satellite`, `SatelliteManager`, `SatelliteOperationException`, `AddCameraDecorator`, and `AddSensorDecorator`.\&quot;,\&quot;/Design Patterns/Creational/Usecase1/README.md\&quot;:\&quot;This file describes a Singleton Design Pattern implementation for a Printer Spooler system. It does not contain any specific class or function definitions, but rather provides an overview of the features and implementation of the Printer Spooler system.\\n\\nThe file summarizes the following:\\n\\n1. Overview:\\n   - This project demonstrates the Singleton Design Pattern using a Printer Spooler system.\\n   - A printer spooler manages all print jobs in an office or networked environment.\\n   - Ensures only one instance exists, preventing duplicates and maintaining a consistent print queue.\\n\\n2. Features:\\n   - Thread-safe Singleton implementation.\\n   - Add print jobs to the queue.\\n   - Process jobs in order (FIFO).\\n   - View pending jobs in the queue.\\n   - Ensures all users/modules share the same spooler instance.\\n\\n3. Implementation:\\n   - `PrinterSpooler` is a singleton class using a thread-safe implementation.\\n   - The constructor for `PrinterSpooler` is made as private so we can\\u0027t create multiple instances.\\n   - This class has methods to `addJob`, `processNextJob`, `showQueue` which are used in the main class.\\n   - A Queue is used to store the jobs in order, executed in a synchronized way.\&quot;,\&quot;/SatelliteApp/src/main/commands/GetList.java\&quot;:\&quot;This file contains a single class and one function:\\n\\n`GetList`: This class is responsible for displaying a list of available satellites.\\n\\n`execute()`: This function is called to execute the `GetList` command, which prints the names of all available satellites or displays an error message if no satellites are found.\\n\\nThe file is part of a larger application that manages satellite operations. The `GetList` class is a command implementation that allows users to view the list of available satellites.\&quot;,\&quot;/SatelliteApp/src/main/core/Dashboard.java\&quot;:\&quot;`Dashboard`: A class that implements the Observer interface and is responsible for displaying a table of information about satellites managed by the SatelliteManager.\\n\\n`update()`: A method that is called when the SatelliteManager notifies the Dashboard of changes, and it calls the `printTable()` method to display the updated information.\\n\\n`printTable()`: A method that prints a formatted table of information about the satellites managed by the SatelliteManager, including their ID, name, solar panel status, data collected, camera status, orientation, and sensor value.\\n\\nThis file defines a `Dashboard` class that is responsible for displaying a table of information about satellites managed by a `SatelliteManager` object. The `Dashboard` class implements the `Observer` interface, which allows it to be notified of changes to the satellites and update the display accordingly.\&quot;,\&quot;/Design Patterns/Behavioral/Usecase1/src/Observer.java\&quot;:\&quot;This file defines an `Observer` interface, which is a part of the Observer design pattern. The Observer pattern is a behavioral design pattern that allows objects to be notified when the state of another object changes.\\n\\n`Observer`: This interface defines the contract for objects that want to be notified of changes in the subject. The `update(String name, double price)` method is used to notify the observer of the changes.\&quot;,\&quot;/Design Patterns/Structural/Usecase1/src/Devices/Radio.java\&quot;:\&quot;`Radio`: A class that represents a radio device and implements the `Device` interface.\\n\\n`poweron()`: Turns the radio on and prints a message.\\n\\n`poweroff()`: Turns the radio off and prints a message.\\n\\n`setVolume(int volume)`: Sets the volume of the radio and prints a message.\\n\\n`ispoweron()`: Returns the current power state of the radio.\\n\\nThis file defines a `Radio` class that implements the `Device` interface, providing methods to power on/off the radio and set the volume.\&quot;,\&quot;/Design Patterns/Structural/Usecase1/src/Remotes/AdvanceRemote.java\&quot;:\&quot;`AdvanceRemote`: A class that extends the `Remote` class and provides additional functionality for controlling a `Device`.\\n\\n`togglepower()`: A method that toggles the power state of the associated `Device`.\\n\\n`volumeUp()`: A method that sets the volume of the associated `Device` to 70.\\n\\n`volumeDown()`: A method that sets the volume of the associated `Device` to 35.\\n\\n`mute()`: A method that sets the volume of the associated `Device` to 0 and prints \\\&quot;muted\\\&quot;.\&quot;,\&quot;/SatelliteApp/out/production/Task6/Readme.md\&quot;:\&quot;This file does not contain any classes or functions. It appears to be a simple document with a heading \\\&quot;Hello i am K L K Ajay Madhavan (226110)\\\&quot; and a subheading \\\&quot;K L N College Of Engineering\\\&quot;. The file seems to be providing some basic information about the author or a student named K L K Ajay Madhavan who is associated with the K L N College Of Engineering.\&quot;,\&quot;/SatelliteApp/src/main/core/LoggerUtil.java\&quot;:\&quot;This file contains a utility class for logging messages with different severity levels.\\n\\n`LoggerUtil`: A utility class that provides methods for logging information, warnings, and errors using the Java Logging API.\\n\\n`logInfo(String message)`: Logs an informational message.\\n\\n`logWarning(String message)`: Logs a warning message.\\n\\n`logError(String message)`: Logs an error message in a synchronized manner.\&quot;,\&quot;/Design Patterns/Structural/Usecase1/src/Devices/Tv.java\&quot;:\&quot;`Tv`: A class that represents a television device and implements the `Device` interface.\\n\\n`poweron()`: Turns the TV on and prints a message.\\n`poweroff()`: Turns the TV off and prints a message.\\n`setVolume(int volume)`: Sets the volume of the TV and prints a message.\\n`ispoweron()`: Returns the current power state of the TV.\\n\\nThis file defines a `Tv` class that implements the `Device` interface, providing methods to power on/off the TV and set the volume.\&quot;,\&quot;/Design Patterns/README.md\&quot;:\&quot;This file is a document that provides an overview of six real-world implementations of software design patterns in Java, demonstrating behavioral, creational, and structural patterns. It does not contain any classes or functions, but rather provides a high-level description of the implemented patterns and their corresponding programs.\\n\\nThe file lists the following design patterns and their corresponding programs:\\n\\nCreational Patterns:\\n1. `Singleton`: Ensures only one instance of the printer spooler exists in a network.\\n2. `Factory`: Allows users to book different vehicles (Car/Bike/Auto) via a common Transport interface.\\n\\nStructural Patterns:\\n1. `Bridge`: Decouples abstraction (Remote) from implementation (Device) allowing independent extension.\\n2. `Decorator`: Allows dynamic enhancement of a base coffee with add-on\\u0027s like Milk, Sugar, Chocolate.\\n\\nBehavioral Patterns:\\n1. `Observer`: Notifies all registered observers (Messenger, Mails) automatically on stock price updates.\\n2. `Command`: Represents each task as a command object (GroceryTask, WorkoutTask, StudyTask) that can be scheduled and executed by the TaskManager.\&quot;,\&quot;/SatelliteApp/src/main/commands/DataCollector.java\&quot;:\&quot;This file contains a single class `DataCollector` that implements the `SatelliteCommand` interface. The `DataCollector` class is responsible for collecting data from a satellite and updating the `SatelliteManager` with the collected data.\\n\\n`DataCollector`: A class that collects data from a satellite and updates the `SatelliteManager` with the collected data.\\n\\n`execute()`: A method that prompts the user to enter the amount of data to collect, collects the data from the satellite, and updates the `SatelliteManager` with the collected data.\&quot;,\&quot;/SatelliteApp/src/main/commands/SatelliteCommand.java\&quot;:\&quot;This file defines an interface called `SatelliteCommand` that represents a command that can be executed on a satellite. The interface has a single method, `execute()`, which throws a `SatelliteOperationException` if an error occurs during the execution of the command.\\n\\n`SatelliteCommand`: An interface that defines a command that can be executed on a satellite.\\n\\n`execute()`: Executes the command on the satellite, throwing a `SatelliteOperationException` if an error occurs.\&quot;,\&quot;/SatelliteApp/src/main/commands/CreateSatellite.java\&quot;:\&quot;This file contains a single class `CreateSatellite` that implements the `SatelliteCommand` interface. The `CreateSatellite` class is responsible for creating a new satellite based on user input and adding it to the `SatelliteManager`.\\n\\n`CreateSatellite`: A class that creates a new satellite based on user input and adds it to the `SatelliteManager`.\\n\\n`execute()`: Prompts the user for various satellite properties (name, orientation, solar panels, initial data collected, and camera), creates a new satellite using the `Builder` class, and adds it to the `SatelliteManager`.\\n\\n`getSatellite()`: Returns the newly created satellite.\&quot;,\&quot;/Design Patterns/Creational/Usecase1/src/PrinterSpoolerSystem.java\&quot;:\&quot;This file implements a Printer Spooler System using the Singleton design pattern.\\n\\n`PrinterSpoolerSystem`: The main class that demonstrates the usage of the `PrinterSpooler` class.\\n\\n`PrinterSpooler`: A Singleton class that manages the print job queue and processes the jobs.\\n\\n`PrinterSpooler.getInstance()`: A static method that returns the single instance of the `PrinterSpooler` class.\\n\\n`PrinterSpooler.addJob(String)`: A method that adds a new print job to the queue.\\n\\n`PrinterSpooler.showQueue()`: A method that displays the current print job queue.\\n\\n`PrinterSpooler.processNextJob()`: A method that processes the next job in the queue.\&quot;,\&quot;/Design Patterns/Behavioral/Usecase2/src/Studytask.java\&quot;:\&quot;This file contains a single class and one function:\\n\\n`Studytask`: A concrete implementation of the `Task` interface, representing a study task for a specific subject.\\n\\n`execute()`: Prints a message indicating that the study task for the specified subject is being executed.\&quot;,\&quot;/SatelliteApp/src/main/commands/DefaultSatellite.java\&quot;:\&quot;This file contains a single class `DefaultSatellite` that implements the `SatelliteCommand` interface. The class is responsible for creating a new default satellite with or without a camera, and adding it to the `SatelliteManager`.\\n\\n`DefaultSatellite`: A class that creates a new default satellite with or without a camera and adds it to the `SatelliteManager`.\\n\\n`execute()`: Prompts the user to enter a name for the default satellite, choose whether to include a camera, and then creates and adds the satellite to the `SatelliteManager`.\&quot;,\&quot;/Design Patterns/Creational/Usecase2/src/Bike.java\&quot;:\&quot;This file defines a `Bike` class that implements the `Transport` interface.\\n\\n`Bike`: A class that represents a bike as a mode of transport.\\n\\n`ride(int distance)`: A method that calculates the fare for a given distance and prints a message with the distance and fare.\&quot;,\&quot;/Design Patterns/Structural/Usecase1/README.md\&quot;:\&quot;This file describes the implementation of the Bridge Design Pattern using a Remote Control System. It does not contain any classes or functions, but rather provides an overview of the design pattern and its implementation.\\n\\nThe file describes the following components:\\n\\n`Device`: Interface for all devices, providing common methods such as powerOn(), powerOff(), and setVolume().\\n\\n`TV` / `Radio`: Concrete implementations of the Device interface.\\n\\n`Remote`: Abstract class that holds a reference to a Device.\\n\\n`BasicRemote`: Provides basic functionality (toggle power, set volume).\\n\\n`AdvancedRemote`: Extends Remote with extra features (mute).\\n\\n`Main`: Demonstrates different remotes controlling different devices.\\n\\nThe file highlights the benefits of the Bridge Design Pattern, such as the ability to control different devices with the same Remote interface, avoiding class explosion, and easily extending the system with new devices or remote types.\&quot;,\&quot;/SatelliteApp/src/main/core/SatelliteOperationException.java\&quot;:\&quot;This file defines a custom exception class called `SatelliteOperationException`. It does not contain any functions, only a constructor that takes a message string and passes it to the parent `Exception` class.\\n\\n`SatelliteOperationException`: A custom exception class used to represent errors that occur during satellite operations.\\n\\n`SatelliteOperationException(String message)`: A constructor that creates a new `SatelliteOperationException` instance with the provided error message.\&quot;,\&quot;/SatelliteApp/src/main/core/Observer.java\&quot;:\&quot;This file defines an `Observer` interface, which is a part of the Observer design pattern. The Observer pattern is a behavioral design pattern that allows objects to be notified when the state of another object changes.\\n\\n`Observer`: This interface defines the update method, which is called when the subject (the object being observed) changes its state.\\n\\n`update()`: This method is called to notify the observer that the subject has changed its state.\&quot;,\&quot;/Design Patterns/Structural/Usecase2/src/Coffee.java\&quot;:\&quot;This file defines a single interface called `Coffee`. The interface provides a contract for creating coffee objects with a name and cost.\\n\\n`Coffee`: An interface that defines the common properties and behaviors of a coffee object.\\n\\n`name()`: A function that returns the name of the coffee.\\n`cost()`: A function that returns the cost of the coffee.\&quot;,\&quot;/Design Patterns/Structural/Usecase1/src/Remotes/SimpleRemote.java\&quot;:\&quot;`SimpleRemote`: A class that extends the `Remote` class and provides basic remote control functionality for a `Device`.\\n\\n`togglepower()`: A method that toggles the power state of the associated `Device`.\\n\\n`volumeUp()`: A method that sets the volume of the associated `Device` to 50.\\n\\n`volumeDown()`: A method that sets the volume of the associated `Device` to 30.\&quot;,\&quot;/SatelliteApp/src/main/app/SatelliteApp.java\&quot;:\&quot;This file is the main application class for a satellite control system. It provides a command-line interface for users to manage and operate satellites, including creating new satellites, performing various operations on existing satellites, and displaying satellite information.\\n\\n`SatelliteApp`: The main class that runs the satellite control application.\\n\\n`getSatellite`: A helper function that prompts the user to enter a satellite name and returns the corresponding `Satellite` object.\\n\\nThe file also imports several classes from other packages, including `CreateSatellite`, `SatelliteCommand`, `Dashboard`, `LoggerUtil`, `Satellite`, `SatelliteManager`, and `SatelliteCommandFactory`, which are likely used throughout the application.\&quot;,\&quot;/SatelliteApp/src/main/decorator/AddSensorDecorator.java\&quot;:\&quot;This file contains the implementation of the `AddSensorDecorator` class, which is a decorator for the `Satellite` class. The purpose of this class is to add a `ThermalSensor` to a `Satellite` object.\\n\\n`AddSensorDecorator`: A decorator class that adds a `ThermalSensor` to a `Satellite` object.\\n\\n`execute()`: Checks if the `Satellite` object already has a `ThermalSensor`, and if not, adds one and updates the `SatelliteManager` with the modified `Satellite` object.\&quot;,\&quot;/Design Patterns/Structural/Usecase2/src/SimpleCoffee.java\&quot;:\&quot;This file contains a single class and two functions:\\n\\n`SimpleCoffee`: A class that implements the `Coffee` interface, representing a simple coffee with a name and a cost.\\n\\n`name()`: A function that returns the name of the coffee, which is \\\&quot;Simple Coffee\\\&quot;.\\n\\n`cost()`: A function that returns the cost of the coffee, which is 10.\&quot;,\&quot;/Design Patterns/Structural/Usecase2/src/CoffeeShop.java\&quot;:\&quot;This file contains the implementation of a Coffee Shop application using the Decorator design pattern.\\n\\n`CoffeeShop`: The main class that demonstrates the usage of the Coffee and its decorators.\\n\\n`main(String[] args)`: The entry point of the application, which creates a simple coffee, adds sugar, and then adds chocolate to the coffee, and prints the name and cost of the resulting coffee.\\n\\n`Coffee`: The interface that defines the basic operations for a coffee, such as getting the name and cost.\\n\\n`SimpleCoffee`: The concrete implementation of the `Coffee` interface, representing a simple coffee.\\n\\n`Sugar`: A decorator class that adds sugar to the coffee.\\n\\n`Chocolate`: A decorator class that adds chocolate to the coffee.\&quot;,\&quot;/SatelliteApp/src/main/commands/CameraCapture.java\&quot;:\&quot;`CameraCapture`: A class that represents a satellite command to capture an image using the satellite\\u0027s camera.\\n\\n`execute()`: Executes the camera capture command, checking if the satellite has a camera, if the camera is turned on, and if the satellite\\u0027s orientation is set, before capturing an image in the direction the satellite is facing.\\n\\nThis file contains a single class, `CameraCapture`, which implements the `SatelliteCommand` interface. The class is responsible for executing the camera capture command on a satellite, performing various checks to ensure the necessary conditions are met before capturing the image.\&quot;,\&quot;/SatelliteApp/src/main/builder/Builder.java\&quot;:\&quot;This file contains a single class, `Builder`, which is used to create `Satellite` objects with various properties.\\n\\n`Builder`: A class that builds `Satellite` objects with specific properties, such as name, orientation, solar panels, data collected, facing direction, and camera.\\n\\n`Builder(String, Direction, boolean, int, String)`: A constructor that initializes the properties of a `Builder` object.\\n\\n`setCamera(Boolean)`: A method that sets the camera property of the `Builder` object.\\n\\n`buildSatellite()`: A method that creates a new `Satellite` object with the properties defined in the `Builder` object.\&quot;,\&quot;/SatelliteApp/src/main/commands/CameraOperation.java\&quot;:\&quot;This file contains a single class:\\n\\n`CameraOperation`: This class represents a command to control the camera of a satellite, allowing the user to turn the camera on or off.\\n\\nThe file also contains the following functions:\\n\\n`CameraOperation(Satellite, SatelliteManager)`: This is the constructor for the `CameraOperation` class, which takes a `Satellite` object and a `SatelliteManager` object as parameters.\\n\\n`execute()`: This function is the main entry point for the `CameraOperation` command, which allows the user to turn the camera on or off and updates the satellite\\u0027s state accordingly.\&quot;,\&quot;/SatelliteApp/src/main/core/SatelliteManager.java\&quot;:\&quot;`SatelliteManager`: A class that manages a list of satellites and notifies observers of changes to the satellite list.\\n\\n`attach(Observer o)`: Adds an observer to the list of observers.\\n`detach(Observer o)`: Removes an observer from the list of observers.\\n`notifyObservers()`: Notifies all observers of changes to the satellite list.\\n`addSatellite(Satellite s)`: Adds a new satellite to the list and notifies observers.\\n`updateSatellite(Satellite s)`: Notifies observers of changes to a satellite.\\n`getSatellites()`: Returns the list of satellites.\&quot;,\&quot;/Design Patterns/Behavioral/Usecase1/src/Apps.java\&quot;:\&quot;This file defines a single class `Apps` that implements the `Observer` interface. The purpose of this file is to provide a base class for creating different observer objects, such as messenger, mail, and other applications, that can receive updates from a subject.\\n\\n`Apps`: A base class that implements the `Observer` interface and provides a way to create different observer objects that can receive updates from a subject.\\n\\n`Apps(String displayname)`: A constructor that initializes the `displayname` field of the `Apps` class.\\n\\n`update(String name, double price)`: A method that is called when the subject being observed has an update. It prints a message to the console with the `displayname` of the observer and the updated `name` and `price` of the subject.\&quot;,\&quot;/SatelliteApp/src/main/commands/SolarPanelManager.java\&quot;:\&quot;`SolarPanelManager`: A class that manages the activation and deactivation of the solar panels on a satellite.\\n\\n`execute()`: The main method that allows the user to activate or deactivate the solar panels on the satellite, and updates the satellite\\u0027s status in the SatelliteManager.\\n\\nThis file contains a single class, `SolarPanelManager`, which is responsible for managing the solar panels on a satellite. The `execute()` method is the main entry point for the class, where the user can interact with the solar panels by activating or deactivating them. The class also updates the satellite\\u0027s status in the `SatelliteManager` when the solar panels are changed.\&quot;,\&quot;/SatelliteApp/src/main/commands/SatelliteRotate.java\&quot;:\&quot;This file contains a single class `SatelliteRotate` that implements the `SatelliteCommand` interface. The `SatelliteRotate` class is responsible for rotating a satellite to a user-specified direction.\\n\\n`SatelliteRotate`: A class that allows the user to rotate a satellite to a specified direction.\\n\\n`execute()`: Prompts the user to enter a direction, sets the satellite\\u0027s orientation to the specified direction, and updates the satellite\\u0027s information in the `SatelliteManager`.\&quot;,\&quot;/Design Patterns/Behavioral/Usecase1/src/StockPriceAlert.java\&quot;:\&quot;This file contains the implementation of a stock price alert system using the Observer design pattern.\\n\\n`StockPriceAlert`: The main class that demonstrates the usage of the stock price alert system.\\n\\n`Stock`: Represents a stock and manages the list of subscribers (observers) to be notified when the stock price changes.\\n\\n`Apps`: Represents an application that subscribes to stock price changes and receives notifications.\\n\\n`main`: The entry point of the program, where a stock (Apple) is created, two applications (Messenger and Mail) are subscribed to the stock, the stock price is updated, and one of the applications is unsubscribed.\&quot;,\&quot;/README.md\&quot;:\&quot;This file is a README document that provides an overview of the EI (Educational Initiatives) Campus Drive test exercises and the solutions implemented using Java. It does not contain any classes or functions, but rather provides a high-level description of the exercises and the structure of the repository.\\n\\nThe file does the following:\\n\\n1. Introduces the repository and the purpose of the EI Campus Drive test exercises.\\n2. Provides the submission details, including the name, roll number, email, and department of the submitter.\\n3. Outlines the exercises, including the Design Patterns exercise and the Mini-Projects exercise.\\n4. Provides a brief description of the contents of the Design Patterns exercise, including the use cases for Creational, Structural, and Behavioral design patterns.\\n5. Provides a brief description of the Mini-Projects exercise, specifically the Satellite App project, and refers the reader to the README file in the `SatelliteApp` directory for more details.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;C:/Studies/EI studies&quot;:&quot;{\&quot;/Design Patterns/Behavioral/Usecase1/src/Apps.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Behavioral/Usecase1/src/Apps.java\&quot;,\&quot;file_name\&quot;:\&quot;Apps.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Apps\&quot;,\&quot;method_parameters\&quot;:\&quot;(String displayname)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;displayname\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[5,4],[7,5]]},{\&quot;method_name\&quot;:\&quot;update\&quot;,\&quot;method_parameters\&quot;:\&quot;(String name, double price)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;name\&quot;},{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;price\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[9,4],[12,5]]}]},\&quot;/Design Patterns/Behavioral/Usecase1/src/Observer.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Behavioral/Usecase1/src/Observer.java\&quot;,\&quot;file_name\&quot;:\&quot;Observer.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;update\&quot;,\&quot;method_parameters\&quot;:\&quot;(String name,double price)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;name\&quot;},{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;price\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[3,42]]}]},\&quot;/Design Patterns/Behavioral/Usecase1/src/Stock.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Behavioral/Usecase1/src/Stock.java\&quot;,\&quot;file_name\&quot;:\&quot;Stock.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Stock\&quot;,\&quot;method_parameters\&quot;:\&quot;(String name,double price)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;name\&quot;},{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;price\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[10,4],[14,5]]},{\&quot;method_name\&quot;:\&quot;subscribe\&quot;,\&quot;method_parameters\&quot;:\&quot;(Observer o)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Observer\&quot;,\&quot;name\&quot;:\&quot;o\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[16,4],[19,5]]},{\&quot;method_name\&quot;:\&quot;unsubscribe\&quot;,\&quot;method_parameters\&quot;:\&quot;(Observer o)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Observer\&quot;,\&quot;name\&quot;:\&quot;o\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[21,4],[24,5]]},{\&quot;method_name\&quot;:\&quot;notifyObservers\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[26,4],[31,5]]},{\&quot;method_name\&quot;:\&quot;setPrice\&quot;,\&quot;method_parameters\&quot;:\&quot;(double price)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;double\&quot;,\&quot;name\&quot;:\&quot;price\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[33,4],[37,5]]}]},\&quot;/Design Patterns/Behavioral/Usecase1/src/StockPriceAlert.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Behavioral/Usecase1/src/StockPriceAlert.java\&quot;,\&quot;file_name\&quot;:\&quot;StockPriceAlert.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[1,4],[13,5]]}]},\&quot;/Design Patterns/Behavioral/Usecase1/src/Subject.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Behavioral/Usecase1/src/Subject.java\&quot;,\&quot;file_name\&quot;:\&quot;Subject.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;subscribe\&quot;,\&quot;method_parameters\&quot;:\&quot;(Observer o)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Observer\&quot;,\&quot;name\&quot;:\&quot;o\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[3,31]]},{\&quot;method_name\&quot;:\&quot;unsubscribe\&quot;,\&quot;method_parameters\&quot;:\&quot;(Observer o)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Observer\&quot;,\&quot;name\&quot;:\&quot;o\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[4,33]]},{\&quot;method_name\&quot;:\&quot;notifyObservers\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[5,27]]}]},\&quot;/Design Patterns/Behavioral/Usecase1/README.md\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Behavioral/Usecase1/README.md\&quot;,\&quot;file_name\&quot;:\&quot;README.md\&quot;,\&quot;methods\&quot;:[]},\&quot;/Design Patterns/Behavioral/Usecase2/src/DoToTask.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Behavioral/Usecase2/src/DoToTask.java\&quot;,\&quot;file_name\&quot;:\&quot;DoToTask.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[1,4],[12,5]]}]},\&quot;/Design Patterns/Behavioral/Usecase2/src/GroceryTask.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Behavioral/Usecase2/src/GroceryTask.java\&quot;,\&quot;file_name\&quot;:\&quot;GroceryTask.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;GroceryTask\&quot;,\&quot;method_parameters\&quot;:\&quot;(String item)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;item\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[5,4],[7,5]]},{\&quot;method_name\&quot;:\&quot;execute\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[9,4],[12,5]]}]},\&quot;/Design Patterns/Behavioral/Usecase2/src/Studytask.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Behavioral/Usecase2/src/Studytask.java\&quot;,\&quot;file_name\&quot;:\&quot;Studytask.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Studytask\&quot;,\&quot;method_parameters\&quot;:\&quot;(String subject)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;subject\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[6,4],[8,5]]},{\&quot;method_name\&quot;:\&quot;execute\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[10,4],[13,5]]}]},\&quot;/Design Patterns/Behavioral/Usecase2/src/Task.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Behavioral/Usecase2/src/Task.java\&quot;,\&quot;file_name\&quot;:\&quot;Task.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;execute\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[3,19]]}]},\&quot;/Design Patterns/Behavioral/Usecase2/src/TaskManager.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Behavioral/Usecase2/src/TaskManager.java\&quot;,\&quot;file_name\&quot;:\&quot;TaskManager.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;addtask\&quot;,\&quot;method_parameters\&quot;:\&quot;(Task task)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Task\&quot;,\&quot;name\&quot;:\&quot;task\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[9,4],[11,5]]},{\&quot;method_name\&quot;:\&quot;runTasks\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[14,4],[20,5]]},{\&quot;method_name\&quot;:\&quot;finishTask\&quot;,\&quot;method_parameters\&quot;:\&quot;(int index)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;index\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[23,4],[31,5]]},{\&quot;method_name\&quot;:\&quot;showTasks\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[34,4],[39,5]]}]},\&quot;/Design Patterns/Behavioral/Usecase2/src/Workout.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Behavioral/Usecase2/src/Workout.java\&quot;,\&quot;file_name\&quot;:\&quot;Workout.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Workout\&quot;,\&quot;method_parameters\&quot;:\&quot;(String work)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;work\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[2,4],[4,5]]},{\&quot;method_name\&quot;:\&quot;execute\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[9,5]]}]},\&quot;/Design Patterns/Behavioral/Usecase2/README.md\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Behavioral/Usecase2/README.md\&quot;,\&quot;file_name\&quot;:\&quot;README.md\&quot;,\&quot;methods\&quot;:[]},\&quot;/Design Patterns/Creational/Usecase1/src/PrinterSpooler.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Creational/Usecase1/src/PrinterSpooler.java\&quot;,\&quot;file_name\&quot;:\&quot;PrinterSpooler.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;PrinterSpooler\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[13,4],[15,5]]},{\&quot;method_name\&quot;:\&quot;getInstance\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;PrinterSpooler\&quot;,\&quot;scope\&quot;:[[18,4],[28,5]]},{\&quot;method_name\&quot;:\&quot;addJob\&quot;,\&quot;method_parameters\&quot;:\&quot;(String jobName)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;jobName\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[30,4],[33,5]]},{\&quot;method_name\&quot;:\&quot;processNextJob\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[35,4],[42,5]]},{\&quot;method_name\&quot;:\&quot;showQueue\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[44,4],[50,5]]}]},\&quot;/Design Patterns/Creational/Usecase1/src/PrinterSpoolerSystem.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Creational/Usecase1/src/PrinterSpoolerSystem.java\&quot;,\&quot;file_name\&quot;:\&quot;PrinterSpoolerSystem.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[1,4],[27,5]]}]},\&quot;/Design Patterns/Creational/Usecase1/README.md\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Creational/Usecase1/README.md\&quot;,\&quot;file_name\&quot;:\&quot;README.md\&quot;,\&quot;methods\&quot;:[]},\&quot;/Design Patterns/Creational/Usecase2/src/Auto.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Creational/Usecase2/src/Auto.java\&quot;,\&quot;file_name\&quot;:\&quot;Auto.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;ride\&quot;,\&quot;method_parameters\&quot;:\&quot;(int distance)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;distance\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[7,5]]}]},\&quot;/Design Patterns/Creational/Usecase2/src/Bike.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Creational/Usecase2/src/Bike.java\&quot;,\&quot;file_name\&quot;:\&quot;Bike.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;ride\&quot;,\&quot;method_parameters\&quot;:\&quot;(int distance)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;distance\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[7,5]]}]},\&quot;/Design Patterns/Creational/Usecase2/src/Car.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Creational/Usecase2/src/Car.java\&quot;,\&quot;file_name\&quot;:\&quot;Car.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;ride\&quot;,\&quot;method_parameters\&quot;:\&quot;(int distance)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;distance\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[7,5]]}]},\&quot;/Design Patterns/Creational/Usecase2/src/Transport.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Creational/Usecase2/src/Transport.java\&quot;,\&quot;file_name\&quot;:\&quot;Transport.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;ride\&quot;,\&quot;method_parameters\&quot;:\&quot;(int distance)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;distance\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[2,4],[2,28]]}]},\&quot;/Design Patterns/Creational/Usecase2/src/TransportFactory.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Creational/Usecase2/src/TransportFactory.java\&quot;,\&quot;file_name\&quot;:\&quot;TransportFactory.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getTransport\&quot;,\&quot;method_parameters\&quot;:\&quot;(String type)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;type\&quot;}],\&quot;return_type\&quot;:\&quot;Transport\&quot;,\&quot;scope\&quot;:[[4,4],[18,5]]}]},\&quot;/Design Patterns/Creational/Usecase2/src/VehicleBookingApp.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Creational/Usecase2/src/VehicleBookingApp.java\&quot;,\&quot;file_name\&quot;:\&quot;VehicleBookingApp.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[22,5]]}]},\&quot;/Design Patterns/Creational/Usecase2/README.md\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Creational/Usecase2/README.md\&quot;,\&quot;file_name\&quot;:\&quot;README.md\&quot;,\&quot;methods\&quot;:[]},\&quot;/Design Patterns/Structural/Usecase1/src/Devices/Device.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Structural/Usecase1/src/Devices/Device.java\&quot;,\&quot;file_name\&quot;:\&quot;Device.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;poweron\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[3,26]]},{\&quot;method_name\&quot;:\&quot;poweroff\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[4,27]]},{\&quot;method_name\&quot;:\&quot;setVolume\&quot;,\&quot;method_parameters\&quot;:\&quot;(int volume)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;volume\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[5,38]]},{\&quot;method_name\&quot;:\&quot;ispoweron\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[6,4],[6,31]]}]},\&quot;/Design Patterns/Structural/Usecase1/src/Devices/Radio.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Structural/Usecase1/src/Devices/Radio.java\&quot;,\&quot;file_name\&quot;:\&quot;Radio.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;poweron\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[11,5]]},{\&quot;method_name\&quot;:\&quot;poweroff\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[13,4],[17,5]]},{\&quot;method_name\&quot;:\&quot;setVolume\&quot;,\&quot;method_parameters\&quot;:\&quot;(int volume)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;volume\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[19,4],[23,5]]},{\&quot;method_name\&quot;:\&quot;ispoweron\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[25,4],[28,5]]}]},\&quot;/Design Patterns/Structural/Usecase1/src/Devices/Tv.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Structural/Usecase1/src/Devices/Tv.java\&quot;,\&quot;file_name\&quot;:\&quot;Tv.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;poweron\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[7,4],[11,5]]},{\&quot;method_name\&quot;:\&quot;poweroff\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[12,4],[16,5]]},{\&quot;method_name\&quot;:\&quot;setVolume\&quot;,\&quot;method_parameters\&quot;:\&quot;(int volume)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;volume\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[18,4],[22,5]]},{\&quot;method_name\&quot;:\&quot;ispoweron\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[24,4],[27,5]]}]},\&quot;/Design Patterns/Structural/Usecase1/src/Remotes/AdvanceRemote.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Structural/Usecase1/src/Remotes/AdvanceRemote.java\&quot;,\&quot;file_name\&quot;:\&quot;AdvanceRemote.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;AdvanceRemote\&quot;,\&quot;method_parameters\&quot;:\&quot;(Device device)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Device\&quot;,\&quot;name\&quot;:\&quot;device\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[6,4],[8,5]]},{\&quot;method_name\&quot;:\&quot;togglepower\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[10,4],[17,5]]},{\&quot;method_name\&quot;:\&quot;volumeUp\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[19,4],[22,5]]},{\&quot;method_name\&quot;:\&quot;volumeDown\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[24,4],[27,5]]},{\&quot;method_name\&quot;:\&quot;mute\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[30,4],[33,5]]}]},\&quot;/Design Patterns/Structural/Usecase1/src/Remotes/Remote.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Structural/Usecase1/src/Remotes/Remote.java\&quot;,\&quot;file_name\&quot;:\&quot;Remote.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Remote\&quot;,\&quot;method_parameters\&quot;:\&quot;(Device device)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Device\&quot;,\&quot;name\&quot;:\&quot;device\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[8,4],[10,5]]},{\&quot;method_name\&quot;:\&quot;togglepower\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[12,4],[12,39]]},{\&quot;method_name\&quot;:\&quot;volumeUp\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[13,4],[13,36]]},{\&quot;method_name\&quot;:\&quot;volumeDown\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[14,4],[14,38]]}]},\&quot;/Design Patterns/Structural/Usecase1/src/Remotes/SimpleRemote.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Structural/Usecase1/src/Remotes/SimpleRemote.java\&quot;,\&quot;file_name\&quot;:\&quot;SimpleRemote.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;SimpleRemote\&quot;,\&quot;method_parameters\&quot;:\&quot;(Device device)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Device\&quot;,\&quot;name\&quot;:\&quot;device\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[5,4],[7,5]]},{\&quot;method_name\&quot;:\&quot;togglepower\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[9,4],[17,5]]},{\&quot;method_name\&quot;:\&quot;volumeUp\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[19,4],[22,5]]},{\&quot;method_name\&quot;:\&quot;volumeDown\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[24,4],[27,5]]}]},\&quot;/Design Patterns/Structural/Usecase1/src/Main.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Structural/Usecase1/src/Main.java\&quot;,\&quot;file_name\&quot;:\&quot;Main.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[6,4],[33,5]]}]},\&quot;/Design Patterns/Structural/Usecase1/README.md\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Structural/Usecase1/README.md\&quot;,\&quot;file_name\&quot;:\&quot;README.md\&quot;,\&quot;methods\&quot;:[]},\&quot;/Design Patterns/Structural/Usecase2/src/Chocolate.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Structural/Usecase2/src/Chocolate.java\&quot;,\&quot;file_name\&quot;:\&quot;Chocolate.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Chocolate\&quot;,\&quot;method_parameters\&quot;:\&quot;(Coffee coffee)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Coffee\&quot;,\&quot;name\&quot;:\&quot;coffee\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[3,4],[5,5]]},{\&quot;method_name\&quot;:\&quot;name\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[7,4],[10,5]]},{\&quot;method_name\&quot;:\&quot;cost\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[12,4],[15,5]]}]},\&quot;/Design Patterns/Structural/Usecase2/src/Coffee.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Structural/Usecase2/src/Coffee.java\&quot;,\&quot;file_name\&quot;:\&quot;Coffee.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;name\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[3,4],[3,18]]},{\&quot;method_name\&quot;:\&quot;cost\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[4,4],[4,15]]}]},\&quot;/Design Patterns/Structural/Usecase2/src/CoffeeDecorator.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Structural/Usecase2/src/CoffeeDecorator.java\&quot;,\&quot;file_name\&quot;:\&quot;CoffeeDecorator.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;CoffeeDecorator\&quot;,\&quot;method_parameters\&quot;:\&quot;(Coffee coffee)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Coffee\&quot;,\&quot;name\&quot;:\&quot;coffee\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[5,4],[7,5]]},{\&quot;method_name\&quot;:\&quot;name\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[10,4],[13,5]]},{\&quot;method_name\&quot;:\&quot;cost\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[15,4],[18,5]]}]},\&quot;/Design Patterns/Structural/Usecase2/src/CoffeeShop.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Structural/Usecase2/src/CoffeeShop.java\&quot;,\&quot;file_name\&quot;:\&quot;CoffeeShop.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[1,4],[10,5]]}]},\&quot;/Design Patterns/Structural/Usecase2/src/SimpleCoffee.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Structural/Usecase2/src/SimpleCoffee.java\&quot;,\&quot;file_name\&quot;:\&quot;SimpleCoffee.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;name\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[3,4],[6,5]]},{\&quot;method_name\&quot;:\&quot;cost\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[8,4],[11,5]]}]},\&quot;/Design Patterns/Structural/Usecase2/src/Sugar.java\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Structural/Usecase2/src/Sugar.java\&quot;,\&quot;file_name\&quot;:\&quot;Sugar.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Sugar\&quot;,\&quot;method_parameters\&quot;:\&quot;(Coffee coffee)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Coffee\&quot;,\&quot;name\&quot;:\&quot;coffee\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[3,4],[5,5]]},{\&quot;method_name\&quot;:\&quot;name\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[7,4],[10,5]]},{\&quot;method_name\&quot;:\&quot;cost\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[12,4],[15,5]]}]},\&quot;/Design Patterns/Structural/Usecase2/README.md\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/Structural/Usecase2/README.md\&quot;,\&quot;file_name\&quot;:\&quot;README.md\&quot;,\&quot;methods\&quot;:[]},\&quot;/Design Patterns/README.md\&quot;:{\&quot;file_path\&quot;:\&quot;/Design Patterns/README.md\&quot;,\&quot;file_name\&quot;:\&quot;README.md\&quot;,\&quot;methods\&quot;:[]},\&quot;/out/production/EI studies/Readme.md\&quot;:{\&quot;file_path\&quot;:\&quot;/out/production/EI studies/Readme.md\&quot;,\&quot;file_name\&quot;:\&quot;Readme.md\&quot;,\&quot;methods\&quot;:[]},\&quot;/SatelliteApp/out/production/Task6/Readme.md\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/out/production/Task6/Readme.md\&quot;,\&quot;file_name\&quot;:\&quot;Readme.md\&quot;,\&quot;methods\&quot;:[]},\&quot;/SatelliteApp/src/main/app/SatelliteApp.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/app/SatelliteApp.java\&quot;,\&quot;file_name\&quot;:\&quot;SatelliteApp.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;main\&quot;,\&quot;method_parameters\&quot;:\&quot;(String[] args)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;args\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[13,4],[189,5]]},{\&quot;method_name\&quot;:\&quot;getSatellite\&quot;,\&quot;method_parameters\&quot;:\&quot;(Scanner sc, List\\u003cSatellite\\u003e satellites, Satellite selected)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Scanner\&quot;,\&quot;name\&quot;:\&quot;sc\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;satellites\&quot;},{\&quot;type\&quot;:\&quot;Satellite\&quot;,\&quot;name\&quot;:\&quot;selected\&quot;}],\&quot;return_type\&quot;:\&quot;Satellite\&quot;,\&quot;scope\&quot;:[[191,4],[207,5]]}]},\&quot;/SatelliteApp/src/main/builder/Builder.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/builder/Builder.java\&quot;,\&quot;file_name\&quot;:\&quot;Builder.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Builder\&quot;,\&quot;method_parameters\&quot;:\&quot;(String name,Direction orientation, boolean solarpanals, int datacollected, String facing)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;name\&quot;},{\&quot;type\&quot;:\&quot;Direction\&quot;,\&quot;name\&quot;:\&quot;orientation\&quot;},{\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;name\&quot;:\&quot;solarpanals\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;datacollected\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;facing\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[13,4],[19,5]]},{\&quot;method_name\&quot;:\&quot;setCamera\&quot;,\&quot;method_parameters\&quot;:\&quot;(Boolean camera)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Boolean\&quot;,\&quot;name\&quot;:\&quot;camera\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[21,4],[23,5]]},{\&quot;method_name\&quot;:\&quot;buildSatellite\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;Satellite\&quot;,\&quot;scope\&quot;:[[25,4],[27,5]]}]},\&quot;/SatelliteApp/src/main/commands/CameraCapture.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/commands/CameraCapture.java\&quot;,\&quot;file_name\&quot;:\&quot;CameraCapture.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;CameraCapture\&quot;,\&quot;method_parameters\&quot;:\&quot;(Satellite satellite)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Satellite\&quot;,\&quot;name\&quot;:\&quot;satellite\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[10,4],[12,5]]},{\&quot;method_name\&quot;:\&quot;execute\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[14,4],[36,5]]}]},\&quot;/SatelliteApp/src/main/commands/CameraOperation.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/commands/CameraOperation.java\&quot;,\&quot;file_name\&quot;:\&quot;CameraOperation.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;CameraOperation\&quot;,\&quot;method_parameters\&quot;:\&quot;(Satellite satellite, SatelliteManager manager)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Satellite\&quot;,\&quot;name\&quot;:\&quot;satellite\&quot;},{\&quot;type\&quot;:\&quot;SatelliteManager\&quot;,\&quot;name\&quot;:\&quot;manager\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[15,4],[18,5]]},{\&quot;method_name\&quot;:\&quot;execute\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[20,4],[60,5]]}]},\&quot;/SatelliteApp/src/main/commands/CreateSatellite.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/commands/CreateSatellite.java\&quot;,\&quot;file_name\&quot;:\&quot;CreateSatellite.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;CreateSatellite\&quot;,\&quot;method_parameters\&quot;:\&quot;(List\\u003cSatellite\\u003e existingSatellites, SatelliteManager manager)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;existingSatellites\&quot;},{\&quot;type\&quot;:\&quot;SatelliteManager\&quot;,\&quot;name\&quot;:\&quot;manager\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[19,4],[22,5]]},{\&quot;method_name\&quot;:\&quot;execute\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[24,4],[130,5]]},{\&quot;method_name\&quot;:\&quot;getSatellite\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;Satellite\&quot;,\&quot;scope\&quot;:[[132,4],[134,5]]}]},\&quot;/SatelliteApp/src/main/commands/DataCollector.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/commands/DataCollector.java\&quot;,\&quot;file_name\&quot;:\&quot;DataCollector.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;DataCollector\&quot;,\&quot;method_parameters\&quot;:\&quot;(Satellite satellite, SatelliteManager manager)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Satellite\&quot;,\&quot;name\&quot;:\&quot;satellite\&quot;},{\&quot;type\&quot;:\&quot;SatelliteManager\&quot;,\&quot;name\&quot;:\&quot;manager\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[14,4],[17,5]]},{\&quot;method_name\&quot;:\&quot;execute\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[19,4],[46,5]]}]},\&quot;/SatelliteApp/src/main/commands/DefaultSatellite.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/commands/DefaultSatellite.java\&quot;,\&quot;file_name\&quot;:\&quot;DefaultSatellite.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;DefaultSatellite\&quot;,\&quot;method_parameters\&quot;:\&quot;(List\\u003cSatellite\\u003e satellites, SatelliteManager manager)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;satellites\&quot;},{\&quot;type\&quot;:\&quot;SatelliteManager\&quot;,\&quot;name\&quot;:\&quot;manager\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[16,4],[19,5]]},{\&quot;method_name\&quot;:\&quot;execute\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[21,4],[64,5]]}]},\&quot;/SatelliteApp/src/main/commands/GetList.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/commands/GetList.java\&quot;,\&quot;file_name\&quot;:\&quot;GetList.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;GetList\&quot;,\&quot;method_parameters\&quot;:\&quot;(List\\u003cSatellite\\u003e satellites)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;satellites\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[12,4],[14,5]]},{\&quot;method_name\&quot;:\&quot;execute\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[16,4],[27,5]]}]},\&quot;/SatelliteApp/src/main/commands/GetState.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/commands/GetState.java\&quot;,\&quot;file_name\&quot;:\&quot;GetState.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;GetState\&quot;,\&quot;method_parameters\&quot;:\&quot;(Satellite satellite)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Satellite\&quot;,\&quot;name\&quot;:\&quot;satellite\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[9,4],[11,5]]},{\&quot;method_name\&quot;:\&quot;execute\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[13,4],[35,5]]}]},\&quot;/SatelliteApp/src/main/commands/SatelliteCommand.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/commands/SatelliteCommand.java\&quot;,\&quot;file_name\&quot;:\&quot;SatelliteCommand.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;execute\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[5,54]]}]},\&quot;/SatelliteApp/src/main/commands/SatelliteRotate.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/commands/SatelliteRotate.java\&quot;,\&quot;file_name\&quot;:\&quot;SatelliteRotate.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;SatelliteRotate\&quot;,\&quot;method_parameters\&quot;:\&quot;(Satellite satellite, SatelliteManager manager)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Satellite\&quot;,\&quot;name\&quot;:\&quot;satellite\&quot;},{\&quot;type\&quot;:\&quot;SatelliteManager\&quot;,\&quot;name\&quot;:\&quot;manager\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[15,4],[18,5]]},{\&quot;method_name\&quot;:\&quot;execute\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[20,4],[43,5]]}]},\&quot;/SatelliteApp/src/main/commands/SolarPanelManager.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/commands/SolarPanelManager.java\&quot;,\&quot;file_name\&quot;:\&quot;SolarPanelManager.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;SolarPanelManager\&quot;,\&quot;method_parameters\&quot;:\&quot;(Satellite satellite, SatelliteManager manager)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Satellite\&quot;,\&quot;name\&quot;:\&quot;satellite\&quot;},{\&quot;type\&quot;:\&quot;SatelliteManager\&quot;,\&quot;name\&quot;:\&quot;manager\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[14,4],[17,5]]},{\&quot;method_name\&quot;:\&quot;execute\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[19,4],[60,5]]}]},\&quot;/SatelliteApp/src/main/commands/ThermalSensorAdapter.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/commands/ThermalSensorAdapter.java\&quot;,\&quot;file_name\&quot;:\&quot;ThermalSensorAdapter.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;ThermalSensorAdapter\&quot;,\&quot;method_parameters\&quot;:\&quot;(Satellite satellite)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Satellite\&quot;,\&quot;name\&quot;:\&quot;satellite\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[11,4],[13,5]]},{\&quot;method_name\&quot;:\&quot;execute\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[15,4],[26,5]]}]},\&quot;/SatelliteApp/src/main/core/Dashboard.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/core/Dashboard.java\&quot;,\&quot;file_name\&quot;:\&quot;Dashboard.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Dashboard\&quot;,\&quot;method_parameters\&quot;:\&quot;(SatelliteManager manager)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;SatelliteManager\&quot;,\&quot;name\&quot;:\&quot;manager\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[6,4],[9,5]]},{\&quot;method_name\&quot;:\&quot;update\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[11,4],[14,5]]},{\&quot;method_name\&quot;:\&quot;printTable\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[16,4],[38,5]]}]},\&quot;/SatelliteApp/src/main/core/Direction.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/core/Direction.java\&quot;,\&quot;file_name\&quot;:\&quot;Direction.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Direction\&quot;,\&quot;method_parameters\&quot;:\&quot;(String facing)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;facing\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[15,4],[17,5]]},{\&quot;method_name\&quot;:\&quot;getFacing\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[19,4],[21,5]]}]},\&quot;/SatelliteApp/src/main/core/LoggerUtil.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/core/LoggerUtil.java\&quot;,\&quot;file_name\&quot;:\&quot;LoggerUtil.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;logInfo\&quot;,\&quot;method_parameters\&quot;:\&quot;(String message)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;message\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[15,4],[17,5]]},{\&quot;method_name\&quot;:\&quot;logWarning\&quot;,\&quot;method_parameters\&quot;:\&quot;(String message)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;message\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[19,4],[21,5]]},{\&quot;method_name\&quot;:\&quot;logError\&quot;,\&quot;method_parameters\&quot;:\&quot;(String message)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;message\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[23,4],[25,5]]}]},\&quot;/SatelliteApp/src/main/core/Observer.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/core/Observer.java\&quot;,\&quot;file_name\&quot;:\&quot;Observer.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;update\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[4,18]]}]},\&quot;/SatelliteApp/src/main/core/Satellite.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/core/Satellite.java\&quot;,\&quot;file_name\&quot;:\&quot;Satellite.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;Satellite\&quot;,\&quot;method_parameters\&quot;:\&quot;(String name, Direction orientation, boolean solarpanals, int datacollected, String facing, Boolean camera)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;name\&quot;},{\&quot;type\&quot;:\&quot;Direction\&quot;,\&quot;name\&quot;:\&quot;orientation\&quot;},{\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;name\&quot;:\&quot;solarpanals\&quot;},{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;datacollected\&quot;},{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;facing\&quot;},{\&quot;type\&quot;:\&quot;Boolean\&quot;,\&quot;name\&quot;:\&quot;camera\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[14,4],[21,5]]},{\&quot;method_name\&quot;:\&quot;getOrientation\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;Direction\&quot;,\&quot;scope\&quot;:[[25,4],[27,5]]},{\&quot;method_name\&quot;:\&quot;setOrientation\&quot;,\&quot;method_parameters\&quot;:\&quot;(Direction orientation)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Direction\&quot;,\&quot;name\&quot;:\&quot;orientation\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[29,4],[32,5]]},{\&quot;method_name\&quot;:\&quot;isSolarpanals\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[34,4],[36,5]]},{\&quot;method_name\&quot;:\&quot;setSolarpanals\&quot;,\&quot;method_parameters\&quot;:\&quot;(boolean solarpanals)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;boolean\&quot;,\&quot;name\&quot;:\&quot;solarpanals\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[38,4],[40,5]]},{\&quot;method_name\&quot;:\&quot;getDatacollected\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;int\&quot;,\&quot;scope\&quot;:[[43,4],[45,5]]},{\&quot;method_name\&quot;:\&quot;setDatacollected\&quot;,\&quot;method_parameters\&quot;:\&quot;(int amt)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;int\&quot;,\&quot;name\&quot;:\&quot;amt\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[47,4],[49,5]]},{\&quot;method_name\&quot;:\&quot;getName\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[51,4],[53,5]]},{\&quot;method_name\&quot;:\&quot;getFacing\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;String\&quot;,\&quot;scope\&quot;:[[55,4],[57,5]]},{\&quot;method_name\&quot;:\&quot;getCamera\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;Boolean\&quot;,\&quot;scope\&quot;:[[59,4],[61,5]]},{\&quot;method_name\&quot;:\&quot;setCamera\&quot;,\&quot;method_parameters\&quot;:\&quot;(Boolean camera)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Boolean\&quot;,\&quot;name\&quot;:\&quot;camera\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[63,4],[65,5]]},{\&quot;method_name\&quot;:\&quot;isCamera\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;boolean\&quot;,\&quot;scope\&quot;:[[67,4],[67,66]]},{\&quot;method_name\&quot;:\&quot;getThermalSensor\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;ThermalSensor\&quot;,\&quot;scope\&quot;:[[69,4],[71,5]]},{\&quot;method_name\&quot;:\&quot;setThermalSensor\&quot;,\&quot;method_parameters\&quot;:\&quot;(ThermalSensor sensor)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;ThermalSensor\&quot;,\&quot;name\&quot;:\&quot;sensor\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[73,4],[75,5]]}]},\&quot;/SatelliteApp/src/main/core/SatelliteManager.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/core/SatelliteManager.java\&quot;,\&quot;file_name\&quot;:\&quot;SatelliteManager.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;SatelliteManager\&quot;,\&quot;method_parameters\&quot;:\&quot;(List\\u003cSatellite\\u003e satellites)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;satellites\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[9,4],[11,5]]},{\&quot;method_name\&quot;:\&quot;attach\&quot;,\&quot;method_parameters\&quot;:\&quot;(Observer o)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Observer\&quot;,\&quot;name\&quot;:\&quot;o\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[13,4],[14,56]]},{\&quot;method_name\&quot;:\&quot;detach\&quot;,\&quot;method_parameters\&quot;:\&quot;(Observer o)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Observer\&quot;,\&quot;name\&quot;:\&quot;o\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[16,4],[17,59]]},{\&quot;method_name\&quot;:\&quot;notifyObservers\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[19,4],[24,5]]},{\&quot;method_name\&quot;:\&quot;addSatellite\&quot;,\&quot;method_parameters\&quot;:\&quot;(Satellite s)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Satellite\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[26,4],[29,5]]},{\&quot;method_name\&quot;:\&quot;updateSatellite\&quot;,\&quot;method_parameters\&quot;:\&quot;(Satellite s)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Satellite\&quot;,\&quot;name\&quot;:\&quot;s\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[31,4],[33,5]]},{\&quot;method_name\&quot;:\&quot;getSatellites\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[35,4],[37,5]]}]},\&quot;/SatelliteApp/src/main/core/SatelliteOperationException.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/core/SatelliteOperationException.java\&quot;,\&quot;file_name\&quot;:\&quot;SatelliteOperationException.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;SatelliteOperationException\&quot;,\&quot;method_parameters\&quot;:\&quot;(String message)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;message\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[3,4],[5,5]]}]},\&quot;/SatelliteApp/src/main/core/Subject.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/core/Subject.java\&quot;,\&quot;file_name\&quot;:\&quot;Subject.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;attach\&quot;,\&quot;method_parameters\&quot;:\&quot;(Observer o)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Observer\&quot;,\&quot;name\&quot;:\&quot;o\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[3,4],[3,28]]},{\&quot;method_name\&quot;:\&quot;detach\&quot;,\&quot;method_parameters\&quot;:\&quot;(Observer o)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Observer\&quot;,\&quot;name\&quot;:\&quot;o\&quot;}],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[4,4],[4,28]]},{\&quot;method_name\&quot;:\&quot;notifyObservers\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[5,4],[5,27]]}]},\&quot;/SatelliteApp/src/main/decorator/AddCameraDecorator.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/decorator/AddCameraDecorator.java\&quot;,\&quot;file_name\&quot;:\&quot;AddCameraDecorator.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;AddCameraDecorator\&quot;,\&quot;method_parameters\&quot;:\&quot;(Satellite targetSatellite, SatelliteManager manager)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Satellite\&quot;,\&quot;name\&quot;:\&quot;targetSatellite\&quot;},{\&quot;type\&quot;:\&quot;SatelliteManager\&quot;,\&quot;name\&quot;:\&quot;manager\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[11,4],[14,5]]},{\&quot;method_name\&quot;:\&quot;execute\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[16,4],[28,5]]}]},\&quot;/SatelliteApp/src/main/decorator/AddSensorDecorator.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/decorator/AddSensorDecorator.java\&quot;,\&quot;file_name\&quot;:\&quot;AddSensorDecorator.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;AddSensorDecorator\&quot;,\&quot;method_parameters\&quot;:\&quot;(Satellite targetSatellite, SatelliteManager satelliteManager)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Satellite\&quot;,\&quot;name\&quot;:\&quot;targetSatellite\&quot;},{\&quot;type\&quot;:\&quot;SatelliteManager\&quot;,\&quot;name\&quot;:\&quot;satelliteManager\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[12,4],[15,5]]},{\&quot;method_name\&quot;:\&quot;execute\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[17,4],[28,5]]}]},\&quot;/SatelliteApp/src/main/decorator/SatelliteDecorator.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/decorator/SatelliteDecorator.java\&quot;,\&quot;file_name\&quot;:\&quot;SatelliteDecorator.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;SatelliteDecorator\&quot;,\&quot;method_parameters\&quot;:\&quot;(Satellite targetSatellite)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Satellite\&quot;,\&quot;name\&quot;:\&quot;targetSatellite\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[10,4],[12,5]]},{\&quot;method_name\&quot;:\&quot;execute\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;void\&quot;,\&quot;scope\&quot;:[[14,4],[19,5]]}]},\&quot;/SatelliteApp/src/main/factories/SatelliteCommandFactory.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/factories/SatelliteCommandFactory.java\&quot;,\&quot;file_name\&quot;:\&quot;SatelliteCommandFactory.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;SatelliteCommandFactory\&quot;,\&quot;method_parameters\&quot;:\&quot;(Satellite satellite, List\\u003cSatellite\\u003e satellites, SatelliteManager manager)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;Satellite\&quot;,\&quot;name\&quot;:\&quot;satellite\&quot;},{\&quot;type\&quot;:\&quot;\&quot;,\&quot;name\&quot;:\&quot;satellites\&quot;},{\&quot;type\&quot;:\&quot;SatelliteManager\&quot;,\&quot;name\&quot;:\&quot;manager\&quot;}],\&quot;return_type\&quot;:\&quot;\&quot;,\&quot;scope\&quot;:[[18,4],[22,5]]},{\&quot;method_name\&quot;:\&quot;getCommand\&quot;,\&quot;method_parameters\&quot;:\&quot;(String command)\&quot;,\&quot;parameter_declarations\&quot;:[{\&quot;type\&quot;:\&quot;String\&quot;,\&quot;name\&quot;:\&quot;command\&quot;}],\&quot;return_type\&quot;:\&quot;Object\&quot;,\&quot;scope\&quot;:[[24,4],[42,5]]}]},\&quot;/SatelliteApp/src/main/sensors/ThermalSensor.java\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/main/sensors/ThermalSensor.java\&quot;,\&quot;file_name\&quot;:\&quot;ThermalSensor.java\&quot;,\&quot;methods\&quot;:[{\&quot;method_name\&quot;:\&quot;getValue\&quot;,\&quot;method_parameters\&quot;:\&quot;()\&quot;,\&quot;parameter_declarations\&quot;:[],\&quot;return_type\&quot;:\&quot;double\&quot;,\&quot;scope\&quot;:[[7,4],[10,5]]}]},\&quot;/SatelliteApp/src/Readme.md\&quot;:{\&quot;file_path\&quot;:\&quot;/SatelliteApp/src/Readme.md\&quot;,\&quot;file_name\&quot;:\&quot;Readme.md\&quot;,\&quot;methods\&quot;:[]},\&quot;/README.md\&quot;:{\&quot;file_path\&quot;:\&quot;/README.md\&quot;,\&quot;file_name\&quot;:\&quot;README.md\&quot;,\&quot;methods\&quot;:[]}}&quot;}" />
  </component>
</project>